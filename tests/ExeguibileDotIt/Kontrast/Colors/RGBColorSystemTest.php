<?php	

/**
 * This file has been generated by PhpUnitTestGenerator
 *
 * @copyright 2018 Stefano Bonvicini <stefano.bonvicini@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 */

namespace ExeguibileDotIt\Kontrast\Colors;
use \PHPUnit\Framework\TestCase;



class RGBColorSystemTest extends TestCase
{

    /**
 * @var RGBColorSystem instance of the class object
 */
protected $object;

/**
 * Sets up the fixture
 * This method is called before a test is executed.
 */
protected function setUp()
{
    $this->object = new RGBColorSystem;
}

        /**
     * Method toRGB.
     *
     * @return RGBColor object
     */
public function testTorgb()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method fromRGB. Sets up object
     * params by RGBColor object in this case is like cloning an object
     *
     * @param RGBColor $color
     *
     * @return self
     */
public function testFromrgb()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method r 
     * Gets or sets color R value
     *
     * @param int $v
     * 
     * @throws \InvalidArgumentException
     *
     * @return mixed self if used as a setter the value 
     * if used as getter
     */
public function testR()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method g 
     * Gets or sets color G value
     *
     * @param int $v
     * 
     * @throws \InvalidArgumentException
     *
     * @return mixed self if used as a setter the value 
     * if used as getter
     */
public function testG()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method b 
     * Gets or sets color B value
     *
     * @param int $v
     * 
     * @throws \InvalidArgumentException
     *
     * @return mixed self if used as a setter the value 
     * if used as getter
     */
public function testB()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method isValidRGBInt.
     *
     * @param int $n
     * 
     * @return bool
     */
public function testIsvalidrgbint()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method __clone.
     * 
     * @return 
     */
public function test__clone()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method setUndefined.
     *
     * @return self
     */
public function testSetundefined()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        
public function testIsundefined()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method getSystemID.
     * Returns the ID of the ColorSystem
     *
     * @return mixed ID of the color system
     */
public function testGetsystemid()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method setSystemID.
     *
     * @param mixed $id
     *
     * @throws \InvalidArgumentException
     *
     * @return void
     */
public function testSetsystemid()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

    
}



