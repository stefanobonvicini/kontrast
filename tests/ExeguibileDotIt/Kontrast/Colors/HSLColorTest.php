<?php	

/**
 * This file has been generated by PhpUnitTestGenerator
 *
 * @copyright 2018 Stefano Bonvicini <stefano.bonvicini@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 */

namespace ExeguibileDotIt\Kontrast\Colors;
use \PHPUnit\Framework\TestCase;



class HSLColorTest extends TestCase
{

    /**
 * @var HSLColor instance of the class object
 */
protected $object;

/**
 * Sets up the fixture
 * This method is called before a test is executed.
 */
protected function setUp()
{
    $this->object = new HSLColor;
}

        /**
     * Method  hue
     * Gets or sets color Hue
     *
     * @param float $v
     * 
     * @throws \InvalidArgumentException
     *
     * @return mixed self if used as a setter the value 
     * if used as getter
     */
public function testHue()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method saturation 
     * Gets or sets color Saturation
     *
     * @param float $v
     * 
     * @throws \InvalidArgumentException
     *
     * @return mixed self if used as a setter the value 
     * if used as getter
     */
public function testSaturation()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method luminosity
     * Gets or sets color Luminosity
     *
     * @param float $v
     * 
     * @throws \InvalidArgumentException
     *
     * @return mixed self if used as a setter the value 
     * if used as getter
     */
public function testLuminosity()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method isValidHue
     *
     * @param float $h
     * 
     * @return bool
     */
public function testIsvalidhue()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method isValidLS
     *
     * @param float $v
     * 
     * @return bool
     */
public function testIsvalidls()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method __clone.
     * 
     * @return 
     */
public function test__clone()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        /**
     * Method setUndefined.
     *
     * @return self
     */
public function testSetundefined()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

        
public function testIsundefined()
{
    $this->markTestIncomplete(
        'This test has not been implemented yet.'
    );

}

    
}



